name: Deploy Hugo site to Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.123.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O "${{ runner.temp }}/hugo.deb" "https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb" \
          && sudo dpkg -i "${{ runner.temp }}/hugo.deb"
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout repository with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Install Node.js dependencies
        run: |
          if [[ -f package-lock.json || -f npm-shrinkwrap.json ]]; then
            npm ci;
          else
            echo "No package-lock or npm-shrinkwrap found.";
          fi
      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo --gc --minify --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Debug: List files in public directory
        run: ls -lR ./public
      - name: Remove symlinks from public (falls vorhanden)
        run: find ./public -type l -delete || true
      - name: Clean public directory for deployment using rsync
        run: |
          rm -rf public_deploy
          rsync -aL --delete public/ public_deploy/
      - name: Debug: List symlinks in public_deploy
        run: find public_deploy -type l -ls || true
      - name: Debug: List all files in public_deploy
        run: find public_deploy -exec ls -l {} \;
      - name: Check for hard links in public_deploy
        run: find public_deploy -type f -links +1 -exec ls -l {} \; || true
      - name: Check size of public_deploy
        run: du -sh public_deploy
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: ./public_deploy

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
